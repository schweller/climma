import React from 'react'
import { Box, Text, StdinContext, Color } from 'ink'
import Spinner from 'ink-spinner'

import { getWeatherByCity } from '../api'
import getConfig from '../config'
import temperatureColor from '../temperature'
import direction from '../direction'

type WeatherData = {
  weatherId?: number;
  windDegree?: number;
  windSpeed?: number;
  minTemperature?: number;
  maxTemperature?: number;
  city?: string;
}

interface State {
  weather: WeatherData;
  loading: boolean;
}

interface Props {
  readonly city: string;
}

const Temperature = ({temp}: {temp?: number}) => {
  if (temp === undefined) {
    return <Color ansi256={203}>{temp} °C</Color>
  }

  const n = temperatureColor(temp)
  return <Color ansi256={n}>{temp} °C</Color>
}

class Climma extends React.Component<Props> {

  state: State = {
    weather: {},
    loading: true
  }

  constructor(props: {city: string}) {
    super(props)

    this.fetchData = this.fetchData.bind(this)
  }

  async fetchData() {
    const { config } = await getConfig()
    const key = config ? config.API_KEY : undefined

    const response = await getWeatherByCity({key, city: this.props.city})
    this.setState({
      loading: false,
      weather: response
    })
  }

  componentDidMount() {
    this.fetchData()
  }

  render() {
    const { city } = this.props
    const { weather, loading } = this.state

    if (loading) {
      return (
        <Box>
          <Color green>Loading <Spinner type="dots" /></Color>
        </Box>
      )
    }

    return (
      <Box flexDirection="column">
        <Box>Weather for {city}</Box>
        <Box>
          <Temperature temp={weather.minTemperature}/> -  <Temperature temp={weather.maxTemperature}/>
        </Box>
        <Box>
          Wind direction: {direction(weather.windDegree)} / Wind speed: {weather.windSpeed} km/h
        </Box>
        <Box>
          <Color bold>Weather generated by climma</Color>
        </Box>
      </Box>
    )
  }
}

export default Climma
