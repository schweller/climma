import chalk from 'chalk'

import { getWeatherByCity, GetWeatherByCityData } from './api'
import conditions, { Conditions } from './conditions'
import temperatureColor from './temperature'
import direction from './direction'
import getConfig from './config'

const render = (data: GetWeatherByCityData) => {
  const weatherId: keyof Conditions = data.weatherId

  console.log("     .-.     ")
  console.log("    (   ).   ")
  console.log("   (___(__)  ")
  console.log("   ⚡     ⚡   ")
  console.log("      ⚡      ")

  console.log(`Weather for ${chalk.green.bold.underline(data.city)}`)
  console.log(``)
  console.log(chalk.green.bold(`${conditions[weatherId]}`))
  console.log(chalk.green(`${temperatureColor(data.minTemperature)} °C - ${temperatureColor(data.maxTemperature)} °C`))
  console.log(chalk.green(`Wind direction: ${direction(data.windDegree)} / Wind speed: ${data.windSpeed} km/h`))
  console.log(chalk.green(`Weather generated by ${chalk.bold(`climma`)}`))
}

async function main() {
  const { config } = await getConfig()

  const [city] = process.argv.slice(2)

  if (city === undefined) {
    console.error(chalk.red('City must be provided!'))
    throw new Error('City must be provided')
  }
  
  const key = config ? config.API_KEY : undefined
  
  if (key === undefined) {
    const error = `API_KEY must be provided! Edit .climmarc on your $HOME folder`
    console.error(chalk.red(error))
    throw new Error(error)    
  }

  const response = await getWeatherByCity({key, city})
  
  render(response)
}

main().catch(error => console.log(error))
